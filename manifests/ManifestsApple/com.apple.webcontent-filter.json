{
    "title": "Web Content Filter (com.apple.webcontent-filter)",
    "description": "The payload that configures web content filters.",
    "properties": {
        "FilterType": {
            "type": "string",
            "title": "Filter Type",
            "default": "BuiltIn",
            "description": "The type of filter, built-in or plug-in. In macOS, the system only supports the plug-in value.",
            "enum": [
                "BuiltIn",
                "Plugin"
            ],
            "options": {
                "enum_titles": [
                    "Built-In (iOS only)",
                    "Plug-In"
                ]
            },
            "property_order": 5
        },
        "FilterGrade": {
            "type": "string",
            "title": "Filter Grade",
            "default": "firewall",
            "description": "The system uses this value to derive the relative order of content filters. Filters with a grade of 'firewall' see network traffic before filters with a grade of 'inspector'. However, the system doesn't define the order of filters within a grade.",
            "enum": [
                "firewall",
                "inspector"
            ],
            "options": {
                "enum_titles": [
                    "Firewall",
                    "Inspector"
                ]
            },
            "property_order": 10
        },
        "AutoFilterEnabled": {
            "type": "boolean",
            "title": "Web filter enabled",
            "default": false,
            "description": "If 'true', the system enables automatic filtering. Use when 'FilterType' is 'BuiltIn'.",
            "property_order": 15
        },
        "PermittedURLs": {
            "type": "array",
            "items": {
                "type": "string",
                "title": "Permitted url items",
                "pattern": "^https?://.*$"
            },
            "title": "Permitted URLs",
            "description": "An array or URLs that are accessible whether or not the automatic filter allows access. Use when 'FilterType' is 'BuiltIn'. Requires that 'AutoFilterEnabled' is 'true'.",
            "property_order": 20
        },
        "FilterBrowsers": {
            "type": "boolean",
            "title": "Filter WebKit Traffic",
            "default": false,
            "description": "If 'true', the system enables filtering WebKit traffic. Use when 'FilterType' is 'Plugin'.\n\nNote:\nAt least one of 'FilterBrowsers' or 'FilterSockets' needs to be 'true'.",
            "property_order": 25
        },
        "AllowListBookmarks": {
            "type": "array",
            "items": {
                "type": "object",
                "title": "Allow List Bookmarks Dictionary",
                "properties": {
                    "URL": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL of the bookmark in the allow list.",
                        "pattern": "^https?:\\/\\/.*$"
                    },
                    "Title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of the bookmark."
                    }
                }
            },
            "title": "Allow List Bookmarks",
            "description": "An array of dictionaries that define the pages that the user can bookmark or visit. Use when 'FilterType' is 'BuiltIn'.",
            "property_order": 30
        },
        "WhitelistedBookmarks": {
            "type": "array",
            "items": {
                "type": "object",
                "title": "Allowlisted Bookmarks Dictionary",
                "properties": {
                    "URL": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL of the bookmark in the allow list.",
                        "pattern": "^https?:\\/\\/.*$"
                    },
                    "Title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of the bookmark."
                    }
                }
            },
            "title": "Allowlisted Bookmarks",
            "description": "Use 'AllowListBookmarks' instead.",
            "property_order": 35
        },
        "DenyListURLs": {
            "type": "array",
            "items": {
                "type": "string",
                "title": "Deny List URL"
            },
            "title": "Deny List URLs",
            "description": "An array of URLs that are inaccessible. Use when 'FilterType' is 'BuiltIn'. Limit the number of these URLs to no more than 500.",
            "property_order": 40
        },
        "BlacklistedURLs": {
            "type": "array",
            "items": {
                "type": "string",
                "title": "Denylisted URL"
            },
            "title": "Denylisted URLs",
            "description": "Use 'DenyListURLs' instead.",
            "property_order": 45
        },
        "UserDefinedName": {
            "type": "string",
            "title": "Filter Configuration Display Name",
            "description": "The display name for this filtering configuration. Required when 'FilterType' is 'Plugin'.",
            "property_order": 50
        },
        "PluginBundleID": {
            "type": "string",
            "title": "Plug-In Bundle ID",
            "description": "The bundle ID of the plug-in that provides filtering service. Required when 'FilterType' is 'Plugin'. Otherwise, it ignores this value. Consult your filtering solution vendor to determine what to specify for this value. Required when 'FilterType' is 'Plugin'.",
            "property_order": 55
        },
        "ServerAddress": {
            "type": "string",
            "title": "Server Address",
            "description": "The server address, which may be the IP address, hostname, or URL. Use when 'FilterType' is 'Plugin'.",
            "property_order": 60
        },
        "UserName": {
            "type": "string",
            "title": "Username",
            "description": "The user name for the service. Use when 'FilterType' is 'Plugin'.",
            "property_order": 65
        },
        "Password": {
            "type": "string",
            "title": "Password",
            "description": "The password for the service. Use when 'FilterType' is 'Plugin'.",
            "property_order": 70
        },
        "PayloadCertificateUUID": {
            "type": "string",
            "title": "Certificate UUID",
            "description": "The UUID of the certificate payload within the same profile that the system uses to authenticate the user. Use when 'FilterType' is 'Plugin'.",
            "pattern": "^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$",
            "property_order": 75
        },
        "Organization": {
            "type": "string",
            "title": "Organization",
            "description": "The organization string to pass to the third-party plug-in. Use when 'FilterType' is 'Plugin'.",
            "property_order": 80
        },
        "FilterSockets": {
            "type": "boolean",
            "title": "Enable Socket Filtering",
            "default": false,
            "description": "If 'true', enables the filtering of socket traffic. Use when 'FilterType' is 'Plugin'.\n\nNote:\nAt least one of 'FilterBrowsers' or 'FilterSockets' needs to be 'true'.",
            "property_order": 85
        },
        "FilterDataProviderBundleIdentifier": {
            "type": "string",
            "title": "Filter Data Provider Bundle Identifier",
            "description": "The bundle identifier string of the filter data provider system extension. This string identifies the filter data provider when the filter starts running. Required if 'FilterSockets' is 'true'.",
            "property_order": 90
        },
        "FilterDataProviderDesignatedRequirement": {
            "type": "string",
            "title": "Filter Data Provider Designated Requirement",
            "description": "The designated requirement string that the system embeds in the code signature of the filter data provider system extension. This string identifies the filter data provider when the filter starts running. Required if 'FilterSockets' is 'true'.",
            "property_order": 95
        },
        "FilterPackets": {
            "type": "boolean",
            "title": "Enable Packet Filtering",
            "default": false,
            "description": "If 'true' and 'FilterType' is 'Plugin', the system enables filtering network packets. Use when 'FilterType' is 'Plugin'.\n\nNote:\nAt least one of 'FilterPackets' or 'FilterSockets' needs to be 'true'.",
            "property_order": 100
        },
        "FilterPacketProviderBundleIdentifier": {
            "type": "string",
            "title": "Filter Packet Provider Bundle Identifier",
            "description": "The bundle identifier string of the filter packet provider system extension. This string identifies the filter packet provider when the filter starts running. Required if 'FilterPackets' is 'true'.",
            "property_order": 105
        },
        "FilterPacketProviderDesignatedRequirement": {
            "type": "string",
            "title": "Filter Packet Provider Designated Requirement",
            "description": "The designated requirement string that the system embeds in the code signature of the filter packet provider system extension. This string identifies the filter packet provider when the filter starts running. Required if 'FilterPackets' is 'true'.",
            "property_order": 110
        },
        "VendorConfig": {
            "type": "object",
            "title": "Vendor Configuration",
            "description": "The custom dictionary that the filtering service plug-in needs. Use when 'FilterType' is 'Plugin'.",
            "properties": {
                "{{key}}": {
                    "type": "string",
                    "title": "Vendor Custom Key Name"
                },
                "{{value}}": {
                    "type": "string",
                    "title": "Vendor Custom Key Value",
                    "description": "The custom key/value pairs for the filtering service."
                }
            },
            "property_order": 115
        },
        "ContentFilterUUID": {
            "type": "string",
            "title": "Content Filter UUID",
            "description": "A globally unique identifier for this content filter configuration. The content filter processes network traffic for managed apps with the same 'ContentFilterUUID' in their app attributes. Use when 'FilterType' is 'Plugin'.This key must be present for unsupervised devices and user enrollment.",
            "property_order": 120
        },
        "HideDenyListURLs": {
            "type": "boolean",
            "title": "HideDenyListURLs",
            "default": false,
            "description": "If 'true', the device hides the 'DenyListURLs' item in the profiles that display in Settings > General > VPN & Device Management.",
            "property_order": 125
        },
        "FilterURLs": {
            "type": "boolean",
            "title": "FilterURLs",
            "default": false,
            "description": "If 'true', the system filters URL requests. Use when 'FilterType' is 'Plugin'. Available in iOS 26 and macOS 26, and later.",
            "property_order": 130
        },
        "URLFilterParameters": {
            "type": "object",
            "description": "A dictionary containing URL filter parameters. Required when 'FilterURLs' is 'true'. Available in iOS 26 and macOS 26 and later.",
            "properties": {
                "URLFilterControlProviderDesignatedRequirement": {
                    "type": "string",
                    "title": "URL Filter Control Provider Designated Requirement",
                    "description": "The designated requirement string in the code signature of the URL filter control provider app extension. The system uses this string to identify the URL filter control provider when the filter starts running. Required in macOS."
                },
                "URLFilterControlProviderBundleIdentifier": {
                    "type": "string",
                    "title": "URL Filter Control Provider Bundle Identifier",
                    "description": "The bundle identifier string of the URL filter control provider app extension. The system uses this string to identify the URL filter control provider when the filter starts running."
                },
                "PIRServerURL": {
                    "type": "string",
                    "title": "Private Information Retrieval server URL",
                    "description": "The URL containing the domain name of the private information retrieval server."
                },
                "PIRPrivacyPassIssuerURL": {
                    "type": "string",
                    "title": "Privacy Pass Issuer URL",
                    "description": "The URL containing the domain name of Privacy Pass Issuer."
                },
                "PIRAuthenticationToken": {
                    "type": "string",
                    "title": "Authentication Token",
                    "description": "The per-user authentication token string, which is an HTTP bearer token for the person using your app. The system uses this token to attest that it is a valid user when requesting anonymous authentication tokens for PIR exchanges."
                },
                "URLFilterFailClosed": {
                    "type": "boolean",
                    "title": "URLFilterFailClosed",
                    "default": false,
                    "description": "If 'true', the system blocks URLs if the filter is enabled, but it fails to make any filtering decision; for example, if there's a communication failure with the PIR server. If 'false', the system allows URLs if the filter is enabled, but it fails to make any filtering decision."
                },
                "URLPrefilterFetchFrequency": {
                    "type": "integer",
                    "title": "URLPrefilterFetchFrequency",
                    "default": 86400,
                    "description": "The time interval in seconds that the system uses to periodically run the 'NEURLFilterControlProvider' app extension. The default value is 86400 seconds (1 day). The minimum allowed value is 2700 seconds (45 minutes). The system allows 'NEURLFilterControlProvider' implementations to download prefilter Bloom filter data onto the device periodically at the specified interval. Implementations need to allow for a slight difference between the scheduled time and the actual runtime of the task, due to the scheduling mechanism on the system."
                }
            },
            "property_order": 135
        },
        "SafariHistoryRetentionEnabled": {
            "type": "boolean",
            "title": "SafariHistoryRetentionEnabled",
            "default": true,
            "description": "If 'true', this payload enforces a policy which requires retention of browsing history. This causes Safari to disable clearing of browsing history, and prevents the use of private browsing mode because that mode doesn't keep browsing history.",
            "property_order": 140
        }
    }
}